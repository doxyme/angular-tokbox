/*!
 *  opentok-angular (https://github.com/aullman/OpenTok-Angular)
 *
 *  Angular module for OpenTok
 *
 *  @Author: Adam Ullman (http://github.com/aullman)
 *  @Copyright (c) 2014 Adam Ullman
 *  @License: Released under the MIT license (http://opensource.org/licenses/MIT)
 **/
angular.module("opentok",[]).constant("TB",window.OT).provider("OTConfig",function(){var e;return{setKey:function(n){e=n},$get:function(){return{apiKey:e}}}}).factory("OTSession",["TB","$rootScope","$q","OTConfig","$log","$timeout","_",function(e,n,s,i,t,o,r){if(!i.apiKey)throw new Error("You need to specify api key");var u={streams:[],uniqueStreams:{camera:[],screen:[]},connections:[],subscribers:[],publisher:null,screensharePublisher:null,ui:{hasAudio:!0,hasVideo:!0},init:function(o,r){return this.session=e.initSession(i.apiKey,o),u.session.on({sessionConnected:function(e){t.debug("OTSession:sessionConnected",e),u.publisher&&u.session.publish(u.publisher)},streamCreated:function(e){t.debug("OTSession:streamCreated",e),u.streams.push(e.stream),u.uniqueStreams.screen=u.getUniqueStreams("screen"),u.uniqueStreams.camera=u.getUniqueStreams("camera"),n.$digest()},streamDestroyed:function(e){t.debug("OTSession:streamDestroyed",e),u.streams.splice(u.streams.indexOf(e.stream),1),u.uniqueStreams.screen.splice(u.uniqueStreams.screen.indexOf(e.stream),1),u.uniqueStreams.camera.splice(u.uniqueStreams.camera.indexOf(e.stream),1),u.uniqueStreams.screen=u.getUniqueStreams("screen"),u.uniqueStreams.camera=u.getUniqueStreams("camera"),n.$digest()},sessionDisconnected:function(e){t.debug("OTSession:sessionDisconnected",e),n.$apply(function(){u.streams.splice(0,u.streams.length),u.uniqueStreams.screen.splice(0,u.uniqueStreams.screen.length),u.uniqueStreams.camera.splice(0,u.uniqueStreams.camera.length),u.connections.splice(0,u.connections.length),u.resetPublishers(),u.off(),u.session=null})},connectionCreated:function(e){t.debug("OTSession:connectionCreated",e),u.connections.push(e.connection),n.$digest()},connectionDestroyed:function(e){t.debug("OTSession:connectionDestroyed",e),u.connections.splice(u.connections.indexOf(e.connection),1),n.$digest()}}),u.trigger("init"),s(function(e,n){u.session.connect(r,function(s){return s?n(s):void e(u.session)})})},initPublisher:function(n,s,t){return e.initPublisher(i.apiKey,n,s,t)},isSessionConnected:function(){return this.session&&(this.session.connected||this.session.isConnected&&this.session.isConnected())},listen:function(e,n){Object.keys(e).forEach(function(s){u.session.on(s,function(i){e[s].call(n,i)})})},togglePublishersAudio:function(e){u.ui.hasAudio="boolean"==typeof e?e:!u.ui.hasAudio,u.publisher&&u.publisher.publishAudio(u.ui.hasAudio)},togglePublishersVideo:function(e){u.ui.hasVideo="boolean"==typeof e?e:!u.ui.hasVideo,u.publisher&&u.publisher.publishVideo(u.ui.hasVideo)},resetPublishers:function(){u.togglePublishersAudio(!0),u.togglePublishersVideo(!0)},getUniqueStreams:function(e){var n=r.groupBy(u.streams,"connection.id");return Object.keys(n).map(function(s){var i=n[s];return r.find(i,{videoType:e})}).filter(function(e){return!!e})},disconnect:function(){u.isSessionConnected()&&(u.publisher&&u.session.unpublish(u.publisher),u.session.disconnect())}};window.OTSession=u;var c=window.OTHelpers||window.OT.$||window.TB.$;return c&&c.eventing&&c.eventing(u),u}]).factory("OTDirectivesHelpers",["_",function(e){return{volumeLevels:[{level:0,name:"volume-low"},{level:.3,name:"volume-medium"},{level:.85,name:"volume-high"}],getVolumeLevelChanges:function(){var e=null;return function(n){e=null===e||e<=n.audioLevel?n.audioLevel:.7*e+.3*n.audioLevel;var s=Math.log(e)/Math.LN10/1.5+1;return Math.min(Math.max(s,0),1)}},setVolumeLevelChanges:function(n,s){var i=this,t=this.volumeLevels.map(function(e){return e.name}).join(" ");n.removeClass(t);var o,r=this.getVolumeLevelChanges(),u=0,c=0;return function(a){if(u+=r(a),c++,30===c){var l=u/c;u=c=0;var d=e.findLast(i.volumeLevels,function(e){return l>=e.level});if(!d)return void console.log("!volume",{average:l,volumeLevels:i.volumeLevels});var h=d.name;s&&s(h),o!==h&&(o=h,n.removeClass(t),n.addClass(h))}}}}}]).directive("otLayout",["$window","$parse","TB","OTSession",function(e,n,s,i){return{restrict:"E",link:function(s,t,o){var r=n(o.props)(),u=e.initLayoutContainer(t[0],r),c=function(){u.layout(),s.$emit("otLayoutComplete")};s.$watch(function(){return t.children().length},c),e.addEventListener("resize",c),s.$on("otLayout",c);var a=function(){i.session.on("streamPropertyChanged",function(e){"videoDimensions"===e.changedProperty&&c()})};return i.session?a():void i.on("init",a)}}}]).directive("otPublisher",["$rootScope","OTSession","OTDirectivesHelpers",function(e,n,s){function i(n){var s;["accessAllowed","accessDenied","accessDialogClosed","accessDialogOpened"].forEach(function(i){n.on(i,function(){"accessDenied"===s&&"accessDialogOpened"===i||(s=i,e.$emit(i))})})}return{restrict:"E",scope:{props:"&"},link:function(t,o){var r=t.props()||{};r.width=r.width||o[0].offsetWidth,r.height=r.height||o[0].offsetHeight;var u=angular.element(o).children();t.publisher=n.initPublisher(o[0],r,function(n){n&&e.$emit("otPublisherError",n,t.publisher)}),angular.element(o).append(u),i(t.publisher),t.publisher.on("loaded",function(){t.publisher.on("audioLevelUpdated",s.setVolumeLevelChanges(o))}),t.$on("$destroy",function(){t.publisher.destroy(),n.publisher=t.publisher=null}),n.isSessionConnected()?n.session.publish(t.publisher):t.publisher.on("streamDestroyed",function(e){e.preventDefault()}),n.publisher=t.publisher}}}]).directive("otScreenPublisher",["$rootScope","OTSession","OTDirectivesHelpers","$log",function(e,n,s,i){return{restrict:"E",scope:{props:"&"},link:function(i,t){var o,r=angular.extend({mirror:!1,audioSource:null,videoSource:"screen",maxResolution:{width:1280,height:720},width:t[0].offsetWidth,height:t[0].offsetHeight},i.props()||{}),u=angular.element(t).children();o=n.initPublisher(t[0],r,function(n){if(n)return e.$emit("otScreenPublisher:error",n)}),angular.element(t).append(u),i.$on("$destroy",function(){n.session?n.session.unpublish(o):o.destroy(),n.screensharePublisher=o=null}),n.publisher&&n.publisher.on("audioLevelUpdated",s.setVolumeLevelChanges(t)),n.isSessionConnected()&&n.session.publish(o),o.on("streamDestroyed",function(n){e.$emit("TB:screenPublisher:streamDestroyed",n)}),n.screensharePublisher=o}}}]).directive("otActiveCallerLayout",["_","OTDirectivesHelpers",function(e,n){return{restrict:"EA",link:function(s){var i,t=[],o=e.debounce(function(){i&&i.removeClass("ot-active");var n=e.sortBy(t,"score").pop();i=n&&n.element.addClass("ot-active"),t=[]},500);s.$on("subscriber:volumeLevel",function(s,i,r){var u=e.find(t,"element",i);u||(u={element:i,score:0},t.push(u));var c=n.volumeLevels;u.score+=e.indexOf(c,e.find(c,"name",r)),o()})}}}]).directive("otSubscriber",["OTSession","OTDirectivesHelpers",function(e,n){return{restrict:"E",scope:{stream:"=",props:"&"},link:function(s,i){!s.stream,i.addClass("ot-"+s.stream.videoType);var t=s.props()||{};t.width=t.width||i[0].offsetWidth,t.height=t.height||i[0].offsetHeight;var o=i.children(),r=e.session.subscribe(s.stream,i[0],t,function(e){e&&s.$emit("otSubscriberError",e,r)});r.on("loaded",function(){e.subscribers.push(r),s.$emit(s,"otLayout"),r.on("audioLevelUpdated",function(e){e.audioLevel<.1||s.$emit("subscriber:audioLevelUpdated",e)}),r.on("audioLevelUpdated",n.setVolumeLevelChanges(i,function(e){s.$emit("subscriber:volumeLevel",i,e)}))}),angular.element(i).append(o),s.$on("$destroy",function(){e.subscribers.splice(e.subscribers.indexOf(r),1),e.session&&e.session.unsubscribe(r)})}}}]);