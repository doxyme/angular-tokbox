/*!
 *  opentok-angular (https://github.com/aullman/OpenTok-Angular)
 *
 *  Angular module for OpenTok
 *
 *  @Author: Adam Ullman (http://github.com/aullman)
 *  @Copyright (c) 2014 Adam Ullman
 *  @License: Released under the MIT license (http://opensource.org/licenses/MIT)
 **/
var _=this._;angular.module("opentok",[]).constant("TB",window.OT).provider("OTConfig",function(){var e;return{setKey:function(n){e=n},$get:function(){return{apiKey:e}}}}).factory("OTSession",["TB","$rootScope","$q","OTConfig","$log","$timeout",function(e,n,s,i,t,o){if(!i.apiKey)throw new Error("You need to specify api key");var r={streams:[],uniqueStreams:{camera:[],screen:[]},connections:[],subscribers:[],publisher:null,screensharePublisher:null,ui:{hasAudio:!0,hasVideo:!0},init:function(o,u){return this.session=e.initSession(i.apiKey,o),r.session.on({sessionConnected:function(e){t.debug("OTSession:sessionConnected",e),r.publisher&&r.session.publish(r.publisher)},streamCreated:function(e){t.debug("OTSession:streamCreated",e),r.streams.push(e.stream),r.uniqueStreams.screen=r.getUniqueStreams("screen"),r.uniqueStreams.camera=r.getUniqueStreams("camera"),n.$digest()},streamDestroyed:function(e){t.debug("OTSession:streamDestroyed",e),r.streams.splice(r.streams.indexOf(e.stream),1),r.uniqueStreams.screen.splice(r.uniqueStreams.screen.indexOf(e.stream),1),r.uniqueStreams.camera.splice(r.uniqueStreams.camera.indexOf(e.stream),1),r.uniqueStreams.screen=r.getUniqueStreams("screen"),r.uniqueStreams.camera=r.getUniqueStreams("camera"),n.$digest()},sessionDisconnected:function(e){t.debug("OTSession:sessionDisconnected",e),n.$apply(function(){r.streams.splice(0,r.streams.length),r.uniqueStreams.screen.splice(0,r.uniqueStreams.screen.length),r.uniqueStreams.camera.splice(0,r.uniqueStreams.camera.length),r.connections.splice(0,r.connections.length),r.resetPublishers(),r.off(),r.session=null})},connectionCreated:function(e){t.debug("OTSession:connectionCreated",e),r.connections.push(e.connection),n.$digest()},connectionDestroyed:function(e){t.debug("OTSession:connectionDestroyed",e),r.connections.splice(r.connections.indexOf(e.connection),1),n.$digest()}}),r.trigger("init"),s(function(e,n){r.session.connect(u,function(s){return s?n(s):void e(r.session)})})},initPublisher:function(n,s,t){return e.initPublisher(i.apiKey,n,s,t)},isSessionConnected:function(){return this.session&&(this.session.connected||this.session.isConnected&&this.session.isConnected())},listen:function(e,n){Object.keys(e).forEach(function(s){r.session.on(s,function(i){e[s].call(n,i)})})},togglePublishersAudio:function(e){r.ui.hasAudio="boolean"==typeof e?e:!r.ui.hasAudio,r.publisher&&r.publisher.publishAudio(r.ui.hasAudio)},togglePublishersVideo:function(e){r.ui.hasVideo="boolean"==typeof e?e:!r.ui.hasVideo,r.publisher&&r.publisher.publishVideo(r.ui.hasVideo)},resetPublishers:function(){r.togglePublishersAudio(!0),r.togglePublishersVideo(!0)},getUniqueStreams:function(e){var n=_.groupBy(r.streams,"connection.id");return Object.keys(n).map(function(s){var i=n[s];return _.find(i,{videoType:e})}).filter(function(e){return!!e})},disconnect:function(){r.isSessionConnected()&&(r.publisher&&r.session.unpublish(r.publisher),r.session.disconnect())}};window.OTSession=r;var u=window.OTHelpers||window.OT.$||window.TB.$;return u&&u.eventing&&u.eventing(r),r}]).factory("OTDirectivesHelpers",[function(){return{volumeLevels:[{level:0,name:"volume-low"},{level:.3,name:"volume-medium"},{level:.85,name:"volume-high"}],getVolumeLevelChanges:function(){var e=null;return function(n){e=null===e||e<=n.audioLevel?n.audioLevel:.7*e+.3*n.audioLevel;var s=Math.log(e)/Math.LN10/1.5+1;return Math.min(Math.max(s,0),1)}},setVolumeLevelChanges:function(e,n){var s=this,i=this.volumeLevels.map(function(e){return e.name}).join(" ");e.removeClass(i);var t,o=this.getVolumeLevelChanges(),r=0,u=0;return function(c){if(r+=o(c),u++,30===u){var a=r/u;r=u=0;var l=_.findLast(s.volumeLevels,function(e){return a>=e.level});if(!l)return void console.log("!volume",{average:a,volumeLevels:s.volumeLevels});var d=l.name;n&&n(d),t!==d&&(t=d,e.removeClass(i),e.addClass(d))}}}}}]).directive("otLayout",["$window","$parse","TB","OTSession",function(e,n,s,i){return{restrict:"E",link:function(s,t,o){var r=n(o.props)(),u=e.initLayoutContainer(t[0],r),c=function(){u.layout(),s.$emit("otLayoutComplete")};s.$watch(function(){return t.children().length},c),e.addEventListener("resize",c),s.$on("otLayout",c);var a=function(){i.session.on("streamPropertyChanged",function(e){"videoDimensions"===e.changedProperty&&c()})};return i.session?a():void i.on("init",a)}}}]).directive("otPublisher",["$rootScope","OTSession","OTDirectivesHelpers",function(e,n,s){function i(n){var s;["accessAllowed","accessDenied","accessDialogClosed","accessDialogOpened"].forEach(function(i){n.on(i,function(){"accessDenied"===s&&"accessDialogOpened"===i||(s=i,e.$emit(i))})})}return{restrict:"E",scope:{props:"&"},link:function(t,o){var r=t.props()||{};r.width=r.width||o[0].offsetWidth,r.height=r.height||o[0].offsetHeight;var u=angular.element(o).children();t.publisher=n.initPublisher(o[0],r,function(n){n&&e.$emit("otPublisherError",n,t.publisher)}),angular.element(o).append(u),i(t.publisher),t.publisher.on("loaded",function(){t.publisher.on("audioLevelUpdated",s.setVolumeLevelChanges(o))}),t.$on("$destroy",function(){t.publisher.destroy(),n.publisher=t.publisher=null}),n.isSessionConnected()?n.session.publish(t.publisher):t.publisher.on("streamDestroyed",function(e){e.preventDefault()}),n.publisher=t.publisher}}}]).directive("otScreenPublisher",["$rootScope","OTSession","OTDirectivesHelpers","$log",function(e,n,s,i){return{restrict:"E",scope:{props:"&"},link:function(i,t){var o,r=angular.extend({mirror:!1,audioSource:null,videoSource:"screen",maxResolution:{width:1280,height:720},width:t[0].offsetWidth,height:t[0].offsetHeight},i.props()||{}),u=angular.element(t).children();o=n.initPublisher(t[0],r,function(n){if(n)return e.$emit("otScreenPublisher:error",n)}),angular.element(t).append(u),i.$on("$destroy",function(){n.session?n.session.unpublish(o):o.destroy(),n.screensharePublisher=o=null}),n.publisher&&n.publisher.on("audioLevelUpdated",s.setVolumeLevelChanges(t)),n.isSessionConnected()&&n.session.publish(o),o.on("streamDestroyed",function(n){e.$emit("TB:screenPublisher:streamDestroyed",n)}),n.screensharePublisher=o}}}]).directive("otActiveCallerLayout",["OTDirectivesHelpers",function(e){return{restrict:"EA",link:function(n){var s,i=[],t=_.debounce(function(){s&&s.removeClass("ot-active");var e=_.sortBy(i,"score").pop();s=e&&e.element.addClass("ot-active"),i=[]},500);n.$on("subscriber:volumeLevel",function(n,s,o){var r=_.find(i,"element",s);r||(r={element:s,score:0},i.push(r));var u=e.volumeLevels;r.score+=_.indexOf(u,_.find(u,"name",o)),t()})}}}]).directive("otSubscriber",["OTSession","OTDirectivesHelpers",function(e,n){return{restrict:"E",scope:{stream:"=",props:"&"},link:function(s,i){!s.stream,i.addClass("ot-"+s.stream.videoType);var t=s.props()||{};t.width=t.width||i[0].offsetWidth,t.height=t.height||i[0].offsetHeight;var o=i.children(),r=e.session.subscribe(s.stream,i[0],t,function(e){e&&s.$emit("otSubscriberError",e,r)});r.on("loaded",function(){e.subscribers.push(r),s.$emit(s,"otLayout"),r.on("audioLevelUpdated",function(e){e.audioLevel<.1||s.$emit("subscriber:audioLevelUpdated",e)}),r.on("audioLevelUpdated",n.setVolumeLevelChanges(i,function(e){s.$emit("subscriber:volumeLevel",i,e)}))}),angular.element(i).append(o),s.$on("$destroy",function(){e.subscribers.splice(e.subscribers.indexOf(r),1),e.session&&e.session.unsubscribe(r)})}}}]);